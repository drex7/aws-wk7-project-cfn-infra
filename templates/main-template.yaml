AWSTemplateFormatVersion: "2010-09-09"
Description: Top-level stack template that deploys a complete CI/CD pipeline with ECR, ECS, CodeBuild, VPC components and DynamoDB.

Parameters:
  AppName: { Type: String, Default: Taskify }
  ContainerPort: { Type: String, Default: 3000 }
  ECRRepoName: { Type: String, Default: taskify-app-ecr-repo }
  ECRImageTag: { Type: String, Default: latest }
  PublicSubnetCidrs: 
    Type: CommaDelimitedList
    Default: 10.0.1.0/24, 10.0.2.0/24
  PrivateSubnetCidrs: 
    Type: CommaDelimitedList
    Default: 10.0.3.0/24, 10.0.4.0/24
  ProjectTag: { Type: String, Default: "week7-project1" }
  TemplatesURL: 
    Type: String
    Default: 'https://artifacts-taskify-app-bucket-8574.s3.eu-central-1.amazonaws.com/templates'
  VpcCidr: { Type: String, Default: 10.0.0.0/16 }
  

Resources:
  NetworkingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplatesURL}/networking-template.yaml
      Parameters:
        AppName: !Ref AppName
        VpcCidr: !Ref VpcCidr
        PublicSubnetCidrs: !Join [',', !Ref PublicSubnetCidrs]
        PrivateSubnetCidrs: !Join [',', !Ref PrivateSubnetCidrs]
        ProjectTag: !Ref ProjectTag

  # Include the IAM stack
  IAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplatesURL}/iam-template.yaml
      Parameters:
        AppName: !Ref AppName
        ProjectTag: !Ref ProjectTag
        ECRRepoName: !Ref ECRRepoName

  S3Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplatesURL}/s3-template.yaml
      Parameters:
        ALBDnsName: !GetAtt ECSStack.Outputs.ALBDnsName
        ECSTaskRoleArn: !GetAtt IAMStack.Outputs.ECSTaskRoleArn
        CodeDeployRoleArn: !GetAtt IAMStack.Outputs.CodeDeployRoleArn
        CodePipelineRoleArn: !GetAtt IAMStack.Outputs.CodePipelineRoleArn
        EventBridgeRoleArn: !GetAtt IAMStack.Outputs.EventBridgeRoleArn


  # Include ECS Stack
  ECSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplatesURL}/ecs-template.yaml
      Parameters:
        ALBSecurityGroup: !GetAtt NetworkingStack.Outputs.ALBSecurityGroup
        AppName: !Ref AppName
        AutoScalingRoleArn: !GetAtt IAMStack.Outputs.AutoScalingRoleArn
        ContainerPort: !Ref ContainerPort
        ContainerSecurityGroup: !GetAtt NetworkingStack.Outputs.ContainerSecurityGroup
        ECRImageTag: !Ref ECRImageTag
        ECRRepoName: !Ref ECRRepoName
        ECSTaskExecutionRoleArn: !GetAtt IAMStack.Outputs.ECSTaskExecutionRoleArn
        ECSTaskRoleArn: !GetAtt IAMStack.Outputs.ECSTaskRoleArn
        ProjectTag: !Ref ProjectTag
        PrivateSubnetIds: !GetAtt NetworkingStack.Outputs.PrivateSubnetIds
        PublicSubnetIds: !GetAtt NetworkingStack.Outputs.PublicSubnetIds
        VpcId: !GetAtt NetworkingStack.Outputs.VpcId
        

  # Include the CI/CD stack
  CICDStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplatesURL}/ci-cd-template.yaml
      Parameters:
        AppName: !Ref AppName
        ALBListenerArn: !GetAtt ECSStack.Outputs.ALBListenerArn
        BlueTargetGroupName: !GetAtt ECSStack.Outputs.BlueTargetGroupName
        CodeDeployRoleArn: !GetAtt IAMStack.Outputs.CodeDeployRoleArn 
        CodePipelineRoleArn: !GetAtt IAMStack.Outputs.CodePipelineRoleArn
        ECRRepoName: !Ref ECRRepoName
        ECSClusterName: !GetAtt ECSStack.Outputs.ECSClusterName
        ECSServiceName: !GetAtt ECSStack.Outputs.ECSServiceName
        EventBridgeRoleArn: !GetAtt IAMStack.Outputs.EventBridgeRoleArn
        GreenTargetGroupName: !GetAtt ECSStack.Outputs.GreenTargetGroupName
        PipelineArtifactBucketName: !GetAtt S3Stack.Outputs.PipelineArtifactBucketName
        ProjectTag: !Ref ProjectTag


Outputs:
  LoadBalancerDNS:
    Value: !GetAtt ECSStack.Outputs.ALBDnsName